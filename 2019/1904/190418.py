# programmers - 2017 kakao blind - 뉴스 클러스터링
str1 = 'FRANCE'
str2 = 'french'
import string
alphabet = {i for i in string.ascii_lowercase}
def solution(str1, str2):
    answer = 0
    l1, l2 = [], []
    ss = str1[0]
    for s in str1[1:]:
        if s.lower() in alphabet:
            if ss == '': ss = s; continue
            t = ss + s
            l1.append(t.lower())
            ss = s
        else: ss = ''
    ss = str2[0]
    for s in str2[1:]:
        if s.lower() in alphabet:
            if ss == '': ss = s; continue
            t = ss + s
            l2.append(t.lower())
            ss = s
        else:
            ss = ''
    if l1 == [] and l2 == []: return 65536
    s1, s2 = set(l1), set(l2)
    d1, d2 = {i:l1.count(i) for i in s1}, {i:l2.count(i) for i in s2}
    intersect = s1.intersection(s2)
    sydiff = s1.symmetric_difference(s2)
    a, b = 0, 0
    for i in intersect:
        a += min(d1[i], d2[i])
        b += max(d1[i], d2[i])
    for i in sydiff:
        if i in d1: b += d1[i]
        if i in d2: b += d2[i]
    answer = int(a / b * 65536)
    return answer
print(solution(str1, str2))
exit()

# programmers - 2017 kakao blind - 셔틀버스
n, t, m = 2, 10, 2
timetable = ['09:10', '09:09', '08:00']
# n, t, m = 1, 1, 5
# timetable = ['08:00', '08:01', '08:02', '08:03']
# n, t, m = 10, 60, 45
# timetable = ['23:59'] * 16
# n, t, m = 10, 60, 45
# timetable = ['23:58'] * 16 + ['00:03'] * 16
def func():
    s = random.randint(1, 2000)
    return ['%s:%s' % (str(random.randint(0, 23)).zfill(2),
                       str(random.randint(0, 60)).zfill(2))
            for _ in range(s)]
import random
# n, t, m = random.randint(1, 11), random.randint(1, 61), random.randint(1, 46)
# # n, t, m = 9, 30, 7
# print(n, t, m)
# timetable = func()
# print('timetime size : %s' % len(timetable))
# timetable = ['00:02', '00:14', '00:16', '00:18', '00:20', '00:21', '00:26', '00:34', '00:34', '00:35', '00:36', '00:41', '00:43', '00:50', '00:51', '00:55', '00:55', '00:58', '00:58', '01:02', '01:11', '01:16', '01:26', '01:26', '01:28', '01:30', '01:35', '01:38', '01:42', '01:42', '01:44', '01:47', '01:47', '01:51', '02:00', '02:06', '02:06', '02:09', '02:11', '02:12', '02:12', '02:17', '02:17', '02:18', '02:23', '02:27', '02:32', '02:36', '02:36', '02:37', '02:39', '02:40', '02:44', '02:45', '02:55', '02:57', '02:57', '02:58', '02:58', '03:01', '03:02', '03:03', '03:05', '03:10', '03:19', '03:26', '03:39', '03:46', '03:54', '04:05', '04:09', '04:15', '04:22', '04:26', '04:29', '04:35', '04:47', '04:52', '04:53', '04:54', '04:60', '05:03', '05:03', '05:04', '05:04', '05:07', '05:08', '05:11', '05:11', '05:20', '05:25', '05:31', '05:33', '05:37', '05:40', '05:42', '05:44', '05:45', '05:46', '05:48', '05:52', '05:53', '05:54', '05:55', '05:59', '06:05', '06:09', '06:10', '06:14', '06:17', '06:18', '06:20', '06:27', '06:27', '06:32', '06:32', '06:32', '06:34', '06:35', '06:37', '06:38', '06:42', '06:53', '06:60', '07:00', '07:00', '07:03', '07:10', '07:12', '07:16', '07:19', '07:21', '07:21', '07:22', '07:23', '07:32', '07:32', '07:37', '07:37', '07:49', '07:54', '07:55', '07:57', '07:59', '07:60', '08:02', '08:04', '08:06', '08:07', '08:17', '08:20', '08:22', '08:31', '08:35', '08:40', '08:49', '08:51', '08:52', '08:53', '08:55', '08:55', '08:60', '09:02', '09:04', '09:05', '09:12', '09:17', '09:19', '09:22', '09:25', '09:27', '09:27', '09:36', '09:38', '09:39', '09:40', '09:41', '09:43', '09:43', '09:47', '09:57', '10:02', '10:03', '10:10', '10:12', '10:15', '10:21', '10:23', '10:26', '10:27', '10:32', '10:33', '10:37', '10:39', '10:40', '10:41', '10:41', '10:44', '10:53', '10:57', '10:58', '10:59', '10:60', '11:03', '11:03', '11:13', '11:15', '11:30', '11:36', '11:39', '11:44', '11:45', '11:46', '11:47', '11:54', '11:58', '11:60', '12:10', '12:12', '12:17', '12:19', '12:28', '12:30', '12:31', '12:38', '12:43', '12:43', '12:46', '12:50', '12:50', '12:52', '12:53', '12:57', '12:59', '12:59', '13:00', '13:02', '13:08', '13:11', '13:12', '13:16', '13:19', '13:22', '13:25', '13:29', '13:30', '13:38', '13:41', '13:47', '13:56', '13:59', '13:60', '14:02', '14:04', '14:07', '14:10', '14:10', '14:11', '14:15', '14:31', '14:32', '14:38', '14:44', '14:47', '14:49', '14:49', '14:51', '14:55', '14:58', '15:00', '15:02', '15:06', '15:07', '15:11', '15:20', '15:21', '15:23', '15:24', '15:24', '15:30', '15:35', '15:35', '15:36', '15:39', '15:40', '15:40', '15:42', '15:44', '15:44', '15:45', '15:47', '15:48', '15:48', '15:49', '15:52', '16:00', '16:01', '16:01', '16:12', '16:16', '16:16', '16:33', '16:33', '16:40', '16:42', '16:46', '16:48', '16:57', '16:58', '16:59', '16:60', '17:11', '17:14', '17:18', '17:21', '17:23', '17:23', '17:27', '17:34', '17:41', '17:48', '17:51', '17:54', '17:58', '17:60', '18:05', '18:18', '18:21', '18:28', '18:29', '18:29', '18:29', '18:32', '18:35', '18:37', '18:41', '18:43', '18:46', '18:50', '18:51', '18:53', '18:55', '18:57', '19:07', '19:08', '19:11', '19:14', '19:14', '19:21', '19:23', '19:25', '19:31', '19:31', '19:39', '19:43', '19:47', '19:48', '19:48', '19:49', '19:51', '19:57', '19:57', '20:01', '20:02', '20:04', '20:04', '20:06', '20:06', '20:08', '20:11', '20:19', '20:21', '20:36', '20:36', '20:42', '20:45', '20:47', '20:54', '20:57', '21:02', '21:02', '21:04', '21:05', '21:05', '21:13', '21:16', '21:22', '21:27', '21:30', '21:31', '21:39', '21:43', '21:44', '21:45', '21:47', '21:53', '21:55', '21:60', '22:00', '22:01', '22:01', '22:01', '22:04', '22:05', '22:05', '22:06', '22:10', '22:12', '22:20', '22:20', '22:28', '22:30', '22:34', '22:37', '22:43', '22:51', '22:52', '22:55', '22:56', '22:59', '23:03', '23:04', '23:05', '23:07', '23:12', '23:25', '23:26', '23:26', '23:26', '23:30', '23:37', '23:39', '23:40', '23:48', '23:49', '23:52', '23:58', '23:59', '23:60', '23:60']
# n, t, m = 3, 60, 2
# timetable = ['09:00', '09:00', '09:00', '09:00', '09:01', '09:00']
from bisect import bisect_left
def solution(n, t, m, timetable):
    answer = '09:00'
    timetable.sort()
    while timetable:
        if timetable[-1] == '23:59': timetable.pop()
        else: break
    if timetable:
        h, mm = divmod((n-1)*t, 60)
        bus = str(9+h).zfill(2) + ':' + str(mm).zfill(2)
        j = min(bisect_left(timetable, bus), m*(n-1))
        answer = max(timetable[j-1], answer)
        del timetable[:j]
    else:
        h, mm = divmod((n-1) * t, 60)
        return '%s:%s' % (str(h+9).zfill(2), str(mm).zfill(2))
    h, mm = divmod((n-1) * t, 60)
    bus = str(9 + h).zfill(2) + ':' + str(mm).zfill(2)
    print(timetable)
    for tt in timetable:
        if bus >= tt:
            if m > 1: m -= 1; answer = max(tt, answer)
            else:
                h, mm = map(int, tt.split(':'))
                if mm > 0: mm -= 1
                else: mm = 59; h -= 1
                answer = str(h).zfill(2) + ':' + str(mm).zfill(2)
                break
        else:
            answer = bus; break
    return answer
print(solution(n, t, m, timetable))
exit()

# programmers - 2017 kakao blind - 다트게임
dartResult = "1S2D*3T"
def solution(dartResult):
    answer = [0]
    t = ''
    d = {'S': 1, 'D': 2, 'T': 3}
    for i in dartResult:
        if '0' <= i <= '9':
            t += i
        elif i in ['S', 'D', 'T']:
            t = int(t)
            t = t ** d[i]
            answer.append(t)
            t = ''
        else:
            if i == '*':
                answer[-1] *= 2
                answer[-2] *= 2
            else:
                answer[-1] *= -1
    return sum(answer)
print(solution(dartResult))
exit()

# programmers - 2017 kakao blind - 비밀지도
n = 5
arr1 = [9, 20, 28, 18, 11]
arr2 = [30, 1, 21, 17, 28]
def solution(n, arr1, arr2):
    answer = []
    for i in range(n):
        t = arr1[i] | arr2[i]
        t = bin(t)[2:].zfill(n)
        t = t.replace('0', ' ')
        t = t.replace('1', '#')
        answer.append(t)
    return answer
print(solution(n, arr1, arr2))